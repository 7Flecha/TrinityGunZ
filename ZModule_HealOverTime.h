#ifndef _ZMODULE_HEALOVERTIME_H
#define _ZMODULE_HEALOVERTIME_H

#include "ZModule.h"
#include "ZModuleID.h"

// ?????? ????? ???? HP?? AP?? ???????? ????? ???? ??·

struct ZHealInfo
{
	float					fBeginTime;		// ?·?????? ????
	float					fNextHealTime;	// ?????·?·???? ????

	float					fHeal;			// 1?? ??????
	int						numHealDesire;	// ?? ??? ???????·
	int						numHealDone;		// ??·?????? ???·

	MMatchDamageType		type;
	MMatchItemEffectId		nEffectId;
	int						nItemId;			// ????? ?????? ??????ID

	bool					bOnHeal;	// ?·???·???? ??????
};

class ZModule_HealOverTime : public ZModule {
private:
	list<ZHealInfo *> m_Heals;

	void RemoveEndedHeal();
	void ClearHeal();

public:
	DECLARE_ID(ZMID_HEALOVERTIME)
	ZModule_HealOverTime();
	~ZModule_HealOverTime();

	virtual bool Update(float fElapsed);
	virtual void InitStatus();

	void BeginHeal(MMatchDamageType type, int nHealAmount, int numHeal, MMatchItemEffectId effectId, int nItemId);
	// bool IsOnHeal() { return m_bOnHeal.Ref(); }
	// float GetHealBeginTime() { return m_fBeginTime.Ref(); }

	bool GetHealOverTimeBuffInfo(vector<MTD_BuffInfo> &vecOut);

	void ShiftFugitiveValues();
};

#endif